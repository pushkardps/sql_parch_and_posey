1. Create a running total of standard_amt_usd (in the orders table) over order time with no date truncation. 

SELECT occurred_at, standard_amt_usd,
SUM(standard_amt_usd) OVER (ORDER BY occurred_at) as running_total
FROM orders o

2. Still create a running total of standard_amt_usd (in the orders table) over order time, but this time, date truncate occurred_at by year and partition by that same year-truncated occurred_at variable. 

SELECT 
DATE_TRUNC('month', occurred_at) as month,
standard_amt_usd,
SUM(standard_amt_usd) OVER (PARTITION BY DATE_TRUNC('month', occurred_at) ORDER BY occurred_at) as running_total
FROM orders o

BETTER WAY using DATE_PART -

SELECT 
concat(DATE_PART('month', occurred_at),'-',
DATE_PART('year', occurred_at)) MoY ,
standard_amt_usd,
SUM(standard_amt_usd) OVER (PARTITION BY (DATE_PART('year', occurred_at),DATE_PART('month', occurred_at)) ORDER BY occurred_at) as running_total
FROM orders o


3. Select the id, account_id, and total variable from the orders table, then create a column called total_rank that ranks this total amount of paper ordered (from highest to lowest) for each account using a partition. 

SELECT id, account_id, total ,
RANK() OVER (PARTITION by account_id ORDER BY total DESC) as total_rank
FROM orders

4.Modify Derek's query from the previous video in the SQL Explorer below to perform this analysis. You'll need to use occurred_at and total_amt_usd in the orders table along with LEAD to do so. In your query results, there should be four columns: occurred_at, total_amt_usd, lead, and lead_difference.

SELECT account_id,
       total_amt_usd,
       LEAD(total_amt_usd) OVER (ORDER BY total_amt_usd) AS lead,
       LEAD(total_amt_usd) OVER (ORDER BY total_amt_usd) - total_amt_usd AS lead_difference
FROM (
SELECT account_id,
       SUM(total_amt_usd) AS total_amt_usd
  FROM orders 
 GROUP BY 1
 ) sub

NTILES-
5.Use the NTILE functionality to divide the accounts into 4 levels in terms of the amount of standard_qty for their orders. Your resulting table should have the account_id, the occurred_at time for each order, the total amount of standard_qty paper purchased, and one of four levels in a standard_quartile column.

SELECT account_id, occurred_at, standard_qty, 
NTILE(4) OVER (PATITION BY account_id ORDER BY standard_qty) as standard_quartile
FROM orders
ORDER BY 3 DESC

